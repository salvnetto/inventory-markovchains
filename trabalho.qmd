---
title: "Estoques"
subtitle: "Controle de Estoques Utilizando Cadeias de Markov"
author:
  - Salvador Netto (2022040141)
  - Nicolas Monteiro (2022039950)
  - Gustavo Aledi (2022040290)
abstract: ""
lang: pt
format: 
  pdf:
    toc: true
    fig-pos: "H"
    #toc-title: "Summary"
    toc-depth: 3
    #toc-location: right
    number-sections: true
    number-depth: 3
    documentclass: report
    fig-cap-location: top
    geometry:
      - top=3cm
      - left=3cm
      - right=2cm
      - bottom=2cm
execute:
  echo: false
  warning: false
  output: false
---

```{r}
library(tidyverse)
library(markovchain)
library(igraph)
```

<<<<<<< HEAD
# Introdução

A gestão eficiente de estoque é um componente vital para o funcionamento bem-sucedido de qualquer negócio que lida com produtos tangíveis. A otimização dos níveis de estoque é crucial para garantir a disponibilidade de produtos para os clientes, ao mesmo tempo em que minimiza os custos de armazenamento e reposição.

Neste contexto, os modelos de Cadeias de Markov têm sido amplamente aplicados na previsão e gestão de estoques, oferecendo uma abordagem analítica poderosa para entender as mudanças no nível de estoque ao longo do tempo. Esses modelos, baseados na teoria das probabilidades e processos estocásticos, permitem prever o comportamento futuro do estoque, considerando as transições probabilísticas entre diferentes estados.

O **método s e S**, dentro do contexto das Cadeias de Markov, é uma estratégia popular para determinar os pontos de reabastecimento ideal. Ele consiste em estabelecer dois pontos de controle: o nível mínimo no estoque (s) e o nível máximo de estoque (S). Quando o estoque atinge o nível mínimo ou abaixo dele, uma nova encomenda é feita para reabastecer o estoque até o nível máximo estabelecido.

O principal objetivo deste trabalho é explorar e aplicar o modelo de Cadeias de Markov em conjunto com o método s e S para a gestão de estoque. Este estudo buscará analisar como esses modelos podem ser utilizados para otimizar os níveis de estoque, minimizando os custos associados à manutenção de inventário sem comprometer a disponibilidade dos produtos para os clientes.

Serão examinados os conceitos fundamentais das Cadeias de Markov, a aplicação do método s e S na gestão de estoque e como essas ferramentas analíticas podem ser empregadas na tomada de decisões estratégicas relacionadas à reposição de estoque. Além disso, serão discutidos casos práticos e exemplos para ilustrar a aplicação desses modelos em cenários do mundo real.

Por meio dessa pesquisa, busca-se fornecer insights valiosos sobre como os modelos de Cadeias de Markov e o método s e S podem ser implementados para melhorar a eficiência na gestão de estoques, contribuindo assim para o aprimoramento das práticas comerciais e a maximização dos resultados empresariais.

Neste trabalho estamos simulando um caso bem simples de estoque de lojas aplicado. Com isso em mente, vamos supor que estamos pegando dados de uma loja que vende celulares na gutierez, nosso produto em questão é o novo iphone, iphone 13.

=======
```{r}
data = read.csv("datasets/data.csv") %>% select(-X)
data$X.1 = 0
colnames(data) = c(-1:5)
rownames(data) = c(-1:5)

trans_matrix = as.matrix(data)
estados = as.character(c(-1:5))
```

```{r}
cadeia = new("markovchain", states= estados, transitionMatrix= trans_matrix, name= 'Estoque')
```

```{r}
plot(cadeia,
    layout=layout.davidson.harel)
```
```{r}
is.irreducible(cadeia)
is.regular(cadeia)
meanRecurrenceTime(cadeia)
steadyStates(cadeia)
```

```{r}
period(cadeia)

communicatingClasses(cadeia)

recurrentClasses(cadeia)

transientClasses(cadeia)

transientStates(cadeia)

recurrentStates(cadeia)

absorbingStates(cadeia)
```

```{r}
seq = markovchainSequence(n = 100, markovchain = cadeia, t0 = "-1")
```

```{r}
noofVisitsDist(cadeia, 9, "-1")

```

```{r}
meanAbsorptionTime(cadeia)

```

```{r}
transitionProbability(cadeia, "2", "4")

```

```{r}
meanNumVisits(cadeia)
```

```{r}
trans_matrix %*% trans_matrix %*% trans_matrix %*% trans_matrix  %*% trans_matrix %*% trans_matrix 
```
>>>>>>> 58f16ace6aaa10b80fd5416bd72b9d0559e252df


